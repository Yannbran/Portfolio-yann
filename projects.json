[
  {
    "title": "Booki",
    "description": "Description du projet: ",
    "descriptionText": "Dans ce projet, j'ai dû créer la page d’accueil d’une agence de voyage en utilisant HTML5 et CSS3.<br> L’objectif principal était d’intégrer une interface responsive basée sur des maquettes Figma pour mobile, tablette et desktop.",
    "problems": "Problématiques rencontrées et solutions: ",
    "problemsText": "Pour assurer une adaptation responsive, j'ai utilisé des media queries afin d'ajuster le design en fonction des différentes tailles d'écran.<br> En ce qui concerne l'intégration précise des maquettes, il m'a été crucial d'analyser attentivement les maquettes Figma et de faire un découpage, pour respecter le design.<br> Enfin, pour la gestion des images et des ressources, il a été important d'optimiser les images pour le web et d'utiliser des formats adaptés pour différentes résolutions d'écran.",
    "competences": "Compétences développées ",
    "competencesText": "- Intégrer du contenu conformément à une maquette avec HTML et CSS.<br> - Implémenter une interface responsive avec HTML et CSS.",
    "link": "https://yannbran.github.io/booki-starter-code-master/",
    "image": "/images/booki_screen.webp"
  },
  {
    "title": "Sophie Bluel",
    "description": "Description du projet",
    "descriptionText": "J’ai créé une page web dynamique pour une architecte d’intérieur en utilisant JavaScript et une API.<br>Le but était de développer la présentation des travaux, gérer les interactions utilisateurs, et permettre l’upload de nouveaux médias via une interface administrateur.<br> Ce projet m’a permis de renforcer mes compétences en JavaScript et en communication avec des APIs.",
    "problems": "Problématiques rencontrées et solutions",
    "problemsText": "Tout d’abord, récupérer les données utilisateurs via des formulaires a nécessité une validation pour garantir l’intégrité des informations. J’ai utilisé des écouteurs d’événements pour capturer les données saisies et les transmettre de manière sécurisée.<br> Ensuite, manipuler les éléments du DOM avec JavaScript a posé des défis en termes de performance et de réactivité. J’ai optimisé le code en utilisant des sélecteurs efficaces et en minimisant les manipulations directes du DOM.<br> Enfin, gérer les événements utilisateurs a demandé une gestion précise des différentes interactions possibles. J’ai implémenté des gestionnaires d’événements pour assurer une expérience utilisateur fluide et réactive, en anticipant et en traitant les erreurs potentielles.",
    "competences": "Compétences développées",
    "competencesText": "- Récupérer les données utilisateurs dans le JavaScript via des formulaires.<br> - Manipuler les éléments du DOM avec JavaScript.<br> - Gérer les événements utilisateurs avec JavaScript.",
    "link": "https://github.com/Yannbran/Portfolio-architecte-sophie-bluel",
    "image": "/images/screen_sophie_bluel.webp"
  },
  {
    "title": "Nina Carducci",
    "description": "Description du projet",
    "descriptionText": "Dans ce projet, j’ai travaillé en tant que développeur freelance pour optimiser le référencement d’un site web en améliorant sa performance et son accessibilité.<br> J’ai commencé par identifier les problèmes de chargement et de référencement en utilisant des outils comme Lighthouse et Wave.<br> Ensuite, j’ai proposé et appliqué des recommandations pour améliorer la vitesse de chargement, la structure du code et le référencement. Mon objectif était d’améliorer les performances et l’accessibilité du site pour un meilleur positionnement sur les moteurs de recherche.<br> Enfin, j’ai créé un rapport illustrant les résultats avant et après les modifications, incluant des captures d’écran des audits et des explications sur les changements apportés.",
    "problems": "Problématiques rencontrées et solutions",
    "problemsText": "Les principales problématiques rencontrées incluaient des temps de chargement lents et une structure de code inefficace, ce qui affectait négativement le référencement et l’accessibilité du site.<br> Pour résoudre ces problèmes, j’ai utilisé des outils d’audit pour identifier les points faibles et proposé des solutions telles que l’optimisation des images, la minification des fichiers CSS et JavaScript, et l’amélioration de la structure HTML.<br> J’ai également mis en place des pratiques de développement accessibles pour garantir que le site soit utilisable par tous les utilisateurs, y compris ceux ayant des handicaps.<br> Ces actions ont permis d’améliorer significativement les performances du site et son accessibilité, contribuant ainsi à une meilleure expérience utilisateur et à un meilleur référencement.",
    "competences": "Compétences développées",
    "competencesText": "- Optimiser les performances d’un site web.<br> - Débugger un site web grâce aux Chrome DevTools.<br> - Rédiger un cahier de recette pour tester un site.",
    "link": "https://github.com/Yannbran/Nina-Carducci-Dev.git",
    "image": "/images/nina-screen.webp"
  },
  {
    "title": "Kasa",
    "description": "Description du projet",
    "descriptionText": "Dans ce projet, j’ai implémenté le front-end d’une application en utilisant React et React Router pour créer une expérience utilisateur moderne et réactive.<br> J’ai travaillé sur la logique de présentation des données et les composants React, configuré la navigation entre les différentes pages avec React Router, et utilisé des données simulées extraites d’un fichier JSON.<br> Le projet s’est concentré exclusivement sur le développement front-end, en se basant sur les maquettes fournies.<br> J’ai débuté avec Create React App pour simplifier la configuration initiale et utilisé Node.js pour exécuter du code JavaScript en dehors du navigateur.",
    "problems": "Problématiques rencontrées et solutions",
    "problemsText": "Les principales problématiques rencontrées incluaient la gestion efficace du routage et l’optimisation des performances de l’application.<br> Pour le routage, j’ai utilisé React Router pour configurer une navigation fluide entre les pages, ce qui a nécessité une compréhension approfondie des routes dynamiques et des composants de navigation.<br> Concernant les performances, j’ai optimisé le rendu des composants en utilisant des techniques comme le lazy loading et la mémorisation des composants.<br> L’utilisation de SASS a également permis de gérer le CSS de manière plus efficace, et l’implémentation d’animations CSS a amélioré l’expérience utilisateur.",
    "competences": "Compétences développées",
    "competencesText": "- Configurer la navigation entre les pages de l'application avec React Router.<br> - Initialiser une application avec Create React App.<br> - Développer des éléments de l'interface d'un site web grâce à des composants React",
    "link": "https://github.com/Yannbran/kasa",
    "image": "/images/Kasa-screen.webp"
  },
  {
    "title": "Mon vieux grimoire",
    "description": "Description du projet",
    "descriptionText": "Dans ce projet, j’ai développé le back-end d’un site de notation de livres en utilisant Express et MongoDB.<br> Mon rôle consistait à créer un serveur, établir la communication avec la base de données, et implémenter des opérations CRUD pour gérer les livres et les notations.<br> J’ai également mis en place un système d’authentification sécurisé pour les utilisateurs, géré le téléchargement et l’optimisation des images, et ajouté des fonctionnalités pour noter les livres et calculer la note moyenne.<br> Le projet a été structuré selon une architecture MVC et a respecté les bonnes pratiques du Green Code pour réduire l’empreinte écologique.",
    "problems": "Problématiques rencontrées et solutions",
    "problemsText": "Les principales problématiques rencontrées incluaient la sécurisation des données et la gestion efficace des opérations CRUD.<br> Pour la sécurité des données, j’ai implémenté des mesures telles que le chiffrement des mots de passe et l’utilisation de tokens JWT pour l’authentification.<br> La gestion des opérations CRUD a nécessité une attention particulière à la validation des données et à la gestion des erreurs.<br> J’ai utilisé Mongoose pour modéliser les données MongoDB, ce qui a simplifié les interactions avec la base de données.<br> La gestion du téléchargement et de l’optimisation des images a été résolue en utilisant des bibliothèques comme Multer et Sharp.<br> Ces solutions ont permis de surmonter les défis et de développer une application back-end robuste et sécurisée.",
    "competences": "Compétences développées",
    "competencesText": "- Implémenter un modèle logique de données conformément à la réglementation.<br> - Mettre en œuvre des opérations CRUD de manière sécurisée.<br> - Stocker des données de manière sécurisée.",
    "link": "https://github.com/Yannbran/backend_mon_vieux_grimoire",
    "image": "/images/Mon-vieux-grimoire.webp"
  }
]
